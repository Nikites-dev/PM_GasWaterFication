@using Microsoft.AspNetCore.Components
@using System.Reflection.Metadata
@using PM_GasWaterFication.Models.Documents
@using PM_GasWaterFication.MongoDB
@inject ProjectData ProjectData

<div class="content-prject">
    <h3>Create project</h3>

    <div class="box-project">
        
        <div class="row-box">
            <p>Отрасль</p>
            <select class="selectCard" @bind="selectRole">
                <option value=@itemFication1>Газоснабжение</option>
                <option value=@itemFication2>Водоснабжение</option>
            </select>
        </div>

        <div class="row-box">
            <p>Client</p>
            <input class="inputCard" @bind-value="@client"/>
        </div>
        
        <div class="row-box">
            <p>Designer</p>
            <select class="selectCard" @bind="selectDesigner">
                @foreach (var item in listDesigners)
                {
                    <option value=@item.Login>@item.Login</option>
                }
            </select>
        </div>

        <div class="row-box">
            <p>Builder</p>
            <select class="selectCard" @bind="selectBuilder">
                @foreach (var item in listBuilders)
                {
                    <option value=@item.Login>@item.Login</option>
                }
            </select>
        </div>
        
        <div class="row-box">
            <button class="btnCreate" onclick="@isCreateProject">Создать</button>
        </div>
    </div>
</div>

@code {
    String itemFication1 = "Газоснабжение";
    String itemFication2 = "Водоснабжение";
    String selectRole = "Y";

    String selectDesigner = "Designer";
    String selectBuilder = "Builder";

    List<Designer> listDesigners = new List<Designer>();
    List<Builder> listBuilders = new List<Builder>();

    [Parameter]
    public String client { get; set; }


    protected override void OnInitialized()
    {
        GetLists();
    }

    public void GetLists()
    {
        listDesigners = MongoDBAction.GetListDesigners();
        listBuilders = MongoDBAction.GetListBuilders();
    }

    private void isCreateProject()
    {
        ProjectData newProject = new ProjectData();

        newProject.TypeProject = selectRole;
        newProject.ClientPartner = client;
        newProject.DesignerPartner = selectDesigner;
        newProject.BuilderPartner = selectBuilder;
        newProject.DataCreate = DateTime.Now.ToString();

        if (newProject.TypeProject == "Водоснабжение")
        {


            newProject.ListDocs = new List<DocSource>
            {
                new DocSource("Акт обследования и выбора трассы сети водоснабжения", false, false, "no file"),
                new DocSource("Акт обследования и выбор места под проектируемую скважину", false, false, "no file"),
                new DocSource("Согласованный ситуационный план (М1:10000 или М1:25000) с нанесением источников воды (скважин, родников и тп.), существующих водонапорных башен, предполагаемой трассой водопровода и места врезки в существующую сеть", false, false, "no file"),
                
                new DocSource("План населённого пункта в М 1:1000 или М 1:500 топографическая съемка).", false, false, "no file"),
                new DocSource("технические условия на водоснабжение;", false, false, "no file"),
                new DocSource("Технические условия на электроснабжение (для насосной станции первого или второго подъема);", false, false, "no file"),
                new DocSource("Градостроительный план земельного участка", false, false, "no file"),
                new DocSource("Справка согласования с собственниками земельных участков", false, false, "no file"),
                new DocSource("документ, подтверждающий проведение межевания с присвоением кадастрового номера земельного участка под строительство водопровода и сооружений на нем.", false, false, "no file"),
                new DocSource("заключение Органа Роспотребнадзора санитарно-эпидемиологической службы по отводу земельного участка и результат радиационного обследования.", false, false, "no file"),
                new DocSource("Сведения о наличие водозаборных скважин (родников) на территории хозяйства.", false, false, "no file"),
                
                new DocSource("Смета на ПиР", false, false, "no file"),
                new DocSource("График проектирования", false, false, "no file"),
            };

            
        }
        else if (newProject.TypeProject == "Газоснабжение")
        {
            newProject.ListDocs = new List<DocSource>
            {
                new DocSource("Письмо-обращение на имя Президента, Премьер-Министра, Минстрой РТ", false, false, "no file"),
                new DocSource("Задание на проектирование", false, false, "no file"),
                new DocSource("Ситуационный план (утвержденный исполкомом)", false, false, "no file"),
                new DocSource("Технические условия на присоединение к газораспределительной сети (№, дата, срок действий Технических условий)", false, false, "no file"),
                new DocSource("Технический паспорт (план БТИ) объекта СКБ", false, false, "no file"),
                new DocSource("Технический паспорт (план БТИ) существующей котельной", false, false, "no file"),
                new DocSource("АКТ обследования объекта", false, false, "no file"),
                new DocSource("Технические условия на сети электроснабжение, водоснабжения, водоотведения при установке БМК", false, false, "no file"),
                new DocSource("Согласование посадки котельной", false, false, "no file"),
                
                new DocSource("Смета на ПиР", false, false, "no file"),
                new DocSource("График проектирования", false, false, "no file"),
            };
        }
        
        newProject.ListForm = new List<DocForm>
        {
            new DocForm("Данные отсутствуют"),    
            new DocForm("Данные отсутствуют"),    
            new DocForm("Данные отсутствуют"),    
            new DocForm("Данные отсутствуют"),    
            new DocForm("Данные отсутствуют")    
        };

        
        MongoDBAction.AddProject(newProject);
    }

}
    
}