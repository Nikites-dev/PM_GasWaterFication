@page "/client"
@using Microsoft.VisualBasic.CompilerServices
@using PM_GasWaterFication.Models.Documents
@using PM_GasWaterFication.MongoDB
@using PM_GasWaterFication.Pages.Documentation
@using ProjectData = PM_GasWaterFication.Models.Documents.ProjectData
@inject PM_GasWaterFication.MongoDB.MongoDBAction mongo
@inject CreateProject CreateProject
@inject DocListPage DocListPage
@inject FormTable FormTable

<h3>ClientPage</h3>

<div class="content-main">
    
    <div class="content-left">
        <div class="left-row1">
            <button class="btnSign2" onclick="@isCreate">Create project</button>    
            <button class="btnSign2" onclick="@isChooseFormBtn">Documentation</button>    
        </div>
        
        <div class="left-row2">
          
              @foreach (var project in projects)
              {
                  <div class="scroll-row">
                      <p>@project.DataCreate</p>
                      <button class="btnRow" @onclick="(() => isChoose(project))">Подробнее</button>
                  </div>
              }
        </div>
        
    </div>
    
    
    <div class="content-right">
        
        <p class="pHeader">Person info</p>
        
        <div class="cardPerson">

            <div class="card-row">
                <p>First Name</p>
                <input class="inputCard" @bind-value="@userFName"/>
            </div>

            <div class="card-row">
                <p>Last Name</p>
                <input class="inputCard" @bind-value="@userLName"/>
            </div>

            <div class="card-row">
                <p>Login</p>
                <input class="inputCard" @bind-value="@userLogin"/>
            </div>

            <div class="card-row">
                <p>Password</p>
                <input class="inputCard" @bind-value="@userPassword"/>
            </div>

            <div class="card-row">
                <p>Email</p>
                <input class="inputCard" @bind-value="@userEmail"/>
            </div>

            <div class="card-row">
                <p>Phone</p>
                <input class="inputCard" @bind-value="@userPhone"/>
            </div>

            <div class="card-row">
                <p>Department</p>
                <input class="inputCard" @bind-value="@userDepartment"/>
            </div>

            <div class="card-row">
                <p>Position</p>
                <input class="inputCard" @bind-value="@userPosition"/>
            </div>
            
            <div class="card-row">
                <p>Role</p>
                <input class="inputCard" @bind-value="@userRole"/>
            </div>
            
        </div>
        
        <button class="btnSign" onclick="@UpdatePersonInfo">Save</button>
        
    </div>
    
    
    <div class="content-bottom">
        @if(isChooseProject == true) 
        {
           <DocListPage ProjectData="@curentProject" intRole="1"></DocListPage>
          
        }
    </div>

    @if (isCreteProject)
    {
        <CreateProject Client="@userDepartment"></CreateProject>
    }
    
     @if (isChooseForm)
    {
        <FormTable ProjectData="@curentProject" isChanged="true"></FormTable>
    }
    
    
    @* @if (isChooseProject) *@
    @* { *@
    @*     <CreateProject Client="@userDepartment"></CreateProject> *@
    @* } *@
    
</div>


@code {

    String userFName = "";
    String userLName = "";
    String userEmail = "";
    String userLogin = "";
    String userPassword = "";
    int userPhone = 0;
    String userDepartment = "";
    String userPosition = "";
    String userRole = "";

    bool isCreteProject = false;
    bool isChooseProject = false;
    bool isChooseForm= false;
   

    Client client = new Client();

    List<ProjectData> projects = new List<ProjectData>();
    ProjectData curentProject = new ProjectData();

    protected override void OnInitialized()
    {

        if (mongo.isLoginClient != null)
        {
            userFName = mongo.isLoginClient.FName;
            userLName = mongo.isLoginClient.LName;
            userEmail = mongo.isLoginClient.Email;
            userLogin = mongo.isLoginClient.Login;
            userPassword = mongo.isLoginClient.Password;
            userRole = mongo.isLoginClient.Role;
            userPhone = mongo.isLoginClient.NumPhone;
            userDepartment = mongo.isLoginClient.Department;
            userPosition = mongo.isLoginClient.Position;
        }

        projects = MongoDBAction.GetListProjects(userDepartment);
    }

    private void UpdatePersonInfo()
    {
        

        client.FName = userFName;
        client.LName = userLName;
        client.Email = userEmail;
        client.Login = userLogin;
        client.Password = userPassword;
        client.Role = userRole;
        client.NumPhone = userPhone;
        client.Department = userDepartment;
        client.Position = userPosition;
        client.FullName = " ";


        MongoDBAction.UpdateByName(userLogin, client);
    }

    private void isCreate()
    {
        if (!isCreteProject)
        {
            isCreteProject = true;
        }
        else
        {
            isCreteProject = false;
        }
        
    }
    
    private void isChoose(ProjectData project)
    {
        if (curentProject != null)
        {
            curentProject = project;
            isChooseProject = true;
        }
    }
    
    private void isChooseFormBtn()
    {
        if (curentProject != null && isChooseProject && !isChooseForm)
        {
            isChooseForm = true;
        }
        else
        {
            isChooseForm = false;
        }

    }
    
}