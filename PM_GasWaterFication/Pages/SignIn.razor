@page "/signIn"
@using PM_GasWaterFication.Models.RazorComponents
@using PM_GasWaterFication.MongoDB
@inject PM_GasWaterFication.MongoDB.MongoDBAction mongo
@inject NavigationManager NavigationManager

<h3 hidden="@hideH3">Sign in</h3>

<div hidden="@hideCardSignIn" class="cardSign">
    <div class="rowContent">
        <p>Login</p>
        <input class="inputCard" @bind-value="@itemLogin" />
    </div>
    
    <div class="rowContent">
        <p style="color: @colorCurrent" >Password</p>
        <input type="password" class="inputCard" @bind-value="@itemPassword"/>
    </div>
</div>

<button hidden="@hideButtonSignIn" class="btnSign" @onclick="@isValidate">Sign in</button> 



@code {
 
    String itemLogin = "";
    String itemPassword = "";
    
    String selectRole="Y";

   
    bool hideLabel = true;
    bool hideCardSignIn = false;
    bool hideCardPerson = true;
    bool hideCardCorner = true;
    bool hideH3 = false;
    bool hideButtonSignIn = false;
    bool hideButtonSignOut = true;
    
    
    
    String colorGray = "#494949";
    String colorGreen = "lightgreen";
    String colorRed = "#ee9090";
    String colorCurrent = "#494949";

    
    public void isValidate()
    {
        if (itemLogin != "" && itemPassword != "")
        {
           
            FindAccount();
          
        }
        
        
        
    }

    public void isUser(User user)
    {
   //     MongoDBAction mongo = new MongoDBAction();

        if (user != null)
        {
            switch (user.Role)
        {
            case "Заказчик":
                NavigationManager.NavigateTo("client");

                if (user is Client client)
                {
                    mongo.isLoginClient = client;
                }
                
              
                break;
                
            case "Проектировщик":
                NavigationManager.NavigateTo("designer");

                if (user is Designer designer)
                {
                    mongo.isLoginDesigner = designer;
                }
                break;
                
            case "Застройщик":
                NavigationManager.NavigateTo("builder");

                if (user is Builder builder)
                {
                    mongo.isLoginBuilder = builder;
                }
                break;
        }
        }
    }

    public void FindAccount()
    {
        User user = new User();

        
        user = MongoDBAction.FindByName(itemLogin, itemPassword);

        if (user is not null)
        {
            if (user.Role == "Заказчик")
            {
                Client client = new Client();
            }
            
            if (user.Role == "Проектировщик")
            {
                Designer designer = new Designer();
            }
            
            if (user.Role == "Застройщик")
            {
                Builder builder = new Builder();
            }
        }
        
        
        
        isUser(user);
        
    }
}
